oj_var=var(oj$len)
vc_mean=mean(vc$len)
vc_var=var(vc$len)
t.test(vc$len-oj$len)
plot(vc$dose,vc$len,main='h')
plot(vc$dose,vc$len,main='VC')
par(new=T)
plot(oj$dose,oj$len,main='VC vs. OJ')
plot(vc$dose,vc$len,main='VC')
plot(vc$dose,vc$len)
plot(oj$dose,oj$len,main='VC vs. OJ',type = 'b')
plot(rnorm(100),type="l",col=2)
plot(vc$dose,vc$len)
par(new=T)
plot(oj$dose,oj$len,main='VC vs. OJ',col=3)
plot(oj$dose,oj$len,main='VC vs. OJ',col=2)
plot(vc$dose,vc$len)
par(new=T)
plot(oj$dose,oj$len,main='VC vs. OJ',col=2)
plot(oj$dose,oj$len,main='VC vs. OJ',col=2, type="l")
plot(vc$dose,vc$len)
par(new=T)
plot(oj$dose,oj$len,main='VC vs. OJ',col=2)
plot(vc$dose,vc$len)
par(new=T)
plot(oj$dose,oj$len,main='VC vs. OJ',col=2,axes=F)
plot(oj$dose,oj$len,main='VC vs. OJ',col=2,axes=F,xlab = F)
plot(oj$dose,oj$len,main='VC vs. OJ',col=2,axes=F,xlab = '')
plot(oj$dose,oj$len,main='VC vs. OJ',col=2,axes=F,xlab = '',ylab = '')
plot(vc$dose,vc$len)
par(new=T)
plot(oj$dose,oj$len,main='VC vs. OJ',col=2,axes=F,xlab = '',ylab = '')
plot(vc$dose,vc$len,xlab = 'len',ylab = 'dose')
par(new=T)
plot(oj$dose,oj$len,main='VC vs. OJ',col=2,axes=F,xlab = '',ylab = '')
ï¼ŸgarchFit
?garchFit
c(50:50)
c(5:50)
install.packages("rugarch")
library(rugarch)
0.55*0.4
0.45*0.6
h_t = \varepsilon_t
0.55*0.4
1+0.5*0.6^2
library(fGarch)
library(Ecdat)
data(Irates)
r = as.numeric(log(Irates[,2]))
n = length(r)
lagr = r[1:(n-1)]
diffr = r[2:n] - lagr
?garchFit
g=garchFit(~arma(1,0)+garch(1,1),data=diffr, cond.dist = "std")
summary(g)
dat = read.csv("Stock_FX_Bond.csv" ,header=T)
dat = read.csv("Rlab9_Stock_FX_Bond.csv" ,header=T)
prices = as.matrix(dat[1:500,c(3,5,7,9,11)])
head(prices)
dim(prices)
?diffr
??diffr
?diff
diff(1:10, 2)
1:10
diff(prices,1)
mean(diff(prices,1))
r=diff(prices,1)
head(r)
dim(r)
?mean
class(r)
var(r)
mean(r)
colMeans(r)
?colMeans
?var
smv=colMeans(r)
smv
class(smv)
prices[,5000]
prices[,500]
prices[500,]
1000000/prices[500,]
10000000/prices[500,]
floor(10000000/prices[500,])
colMeans(r)
mean(r)
var(r)
"s"
cat('h')
?rnorm
qnorm(0.1)
smv
smv''
t(smv)
smv
#smv %*% matrix(0.2)
rep(0.2,5)
#smv %*% t(matrix(rep(0.2,5)))
smv %*% t(matrix(rep(0.2,5)))
smv
t(matrix(rep(0.2,5)))
matrix(rep(0.2,5))
smv %*% matrix(rep(0.2,5))
#w %*% var(r) %*% t(w)
w=matrix(rep(0.2,5))
w %*% var(r) %*% t(w)
var(r)
ecm=var(r)
w %*% ecm %*% t(w)
w %*% ecm
w
ecm
w %*% matrix(ecm)
t(w) %*% matrix(ecm)
matrix(ecm)
ecm
class(ecm)
t(w) %*% ecm
t(w) %*% ecm %*% w
sqrt(t(w) %*% ecm %*% w)
qnorm(0.1)
#qnorm(0.1,mean = )*
w=matrix(rep(0.2,5))
m=smv %*% w
sigma=sqrt(t(w) %*% ecm %*% w)
qnorm(0.1,mean = m,sd = sigma)
m
sigma
50000000*qnorm(0.1,mean = m,sd = sigma)
50000000*qnorm(0.1,mean = m,sd = sigma)
m
50000000*(m+qnorm(0.1) *sigma)
-50000000*(m+qnorm(0.1) *sigma)
var5day=-S*qnorm(0.1, mean = 5*m,sd = sqrt(5)*sigma)
S=50000000
var5day=-S*qnorm(0.1, mean = 5*m,sd = sqrt(5)*sigma)
var5day
library(fGarch)
library(Ecdat)
data(Irates)
r = as.numeric(log(Irates[,2]))
n = length(r)
lagr = r[1:(n-1)]
diffr = r[2:n] - lagr
garchFit(~arma(1,0)+garch(1,1),data=diffr, cond.dist = "std")
g=garchFit(~arma(1,0)+garch(1,1),data=diffr, cond.dist = "std")
g
g$R
residuals(g)
acf(residuals(g))
acf(residuals(g)^2)
acf(diffr)
1+0.51^2
1+0.3*0.51^2
?VARMAsim
??VARMAsim
library(MTS)
matrix(c(0.8,0.4,-0.3,0.6))
matrix(c(0.8,0.4,-0.3,0.6),nrow = 2)
matrix(c(0.8,-0.3,0.4,0.6),nrow = 2)
C=matrix(c(0.8,-0.3,0.4,0.6),nrow = 2)
S=matrix(c(2,0.5,0.5,1.0),nrow = 2)
S
C
m1 = VARMAsim(300,arlags = c(1),phi = C,sigma = S)
yt = m1$series
plot(yt)
ccm(yt,5)
diag(2)
?rmvnorm
library(MTS)
C=matrix(c(0.8,-0.3,0.4,0.6),nrow = 2)
S=matrix(c(2,0.5,0.5,1.0),nrow = 2)
m1 = VARMAsim(300,arlags = c(1),phi = C,sigma = S)
yt = m1$series
plot(yt)
m1
head(m1)
class(m1)
C(1)
C
?VARMAsim
ccm(yt,lags = 5)
?VARMAsim
library(MTS)
?VARMAsim
kable(head(iris), format = "latex")
install.packages("kable")
library(knitr)
install.packages("kable")
kable(head(iris), format = "latex")
kable(head(iris), format = "html")
kable(matrix(1000, ncol = 5), format = "latex", digits = 2, longtable = TRUE)
kable(matrix(1000, ncol = 5), format = "markdown", digits = 2, longtable = TRUE)
kable(matrix(1000, ncol = 5), format = "markdown", digits = 2)
MTSplot(yt)
mq(yt, lag=1-)
mq(yt, lag=10)
m2 = VARMAsim(200,malags = c(1),theta = C,sigma = S);
zt = m2$series
ccm(zt, lags = 2)
mq(zt, lag=10)
rate=read.table("q-fdebt.txt",header=T)
head(rate)
MSTplot(rate)
library(MTS)
MSTplot(rate)
MSTPlot(rate)
MTSplot(rate)
VAR(zt, lags = 5)
library(MTS)
da=read.table("q-fdebt.txt",header=T)
debt=log(da[,3:5])
tdx=da[,1]+da[,2]/12
#MTSplot(debt,tdx);
zt=diffM(debt);
MTSplot(zt,tdx[-1])
VAR(zt, lags = 5)
VAR(zt,p=1)
VAR(zt,p=2)
VAR(zt,p=1)
install.packages("vars")
VARorder(zt)
?VARorder
?VARorderI
VARorderI(zt)
VARorder(zt)
VARorderI(zt)
v=VAR(zt,p=6)
resi=v$residuals
mq(resi,adj=18)
VARorder(zt)
VARorderI(zt)
1+0.3*0.69^2
?factanal
?VARorder
library("MTS")
?VARorder
?refVAR
maturity = c((0:5),5.5,6.5,7.5,8.5,9.5)
maturity
yieldDat = read.table("9_treasury_yields.txt",header=T)
maturity = c((0:5),5.5,6.5,7.5,8.5,9.5)
pairs(yieldDat)
par(mfrow=c(4,3))
for (i in 0:11){
plot(maturity,yieldDat[100*i+1,],type="b")
}
?pairs
#####Author: Meng WeiRan(A0109899E), Dai Rui(A0132308R)
[NUS MFE]: http://www.rmi.nus.edu.sg/_images/rmilogo_27June2013.jpg
![NUS MFE][http://www.rmi.nus.edu.sg/_images/rmilogo_27June2013.jpg]
![logo](http://www.rmi.nus.edu.sg/_images/rmilogo_27June2013.jpg "NUS MFE")
install.packages("fOptions")
library(fOptions)
?fOptions
??fOptions
library(fOptions)
GBSOption(TypeFlag = "c", S = s0, X = K, Time = T, r = r, b = 0, sigma = sigma)
r= 0.10
sigma=0.30
s0=100
K=100
H=97
T=0.2
GBSOption(TypeFlag = "c", S = s0, X = K, Time = T, r = r, b = 0, sigma = sigma)
install.packages("fExoticOptions")
library(fExoticOptions)
??fExoticOptions
?fExoticOptions
?GeometricAverageRateOption
PTSingleAssetBarrierOption(TypeFlag="cdoA", S=s0, X=K, H=H, K=0, Time=T, r=r, b=0, sigma= sigma,title = NULL, description = NULL)
r= 0.10
sigma=0.30
s0=100
X=100
H=97
T=0.2
PTSingleAssetBarrierOption(TypeFlag="cdoA", S=s0, X=X, H=H, K=0, Time=T, r=r, b=0, sigma= sigma,title = NULL, description = NULL)
PTSingleAssetBarrierOption(TypeFlag="cdoA", S=s0, X=X, H=H, Time=T, r=r, b=0, sigma= sigma)
PTSingleAssetBarrierOption(TypeFlag="cdoB", S=s0, X=X, H=H, time1=0,Time=T, r=r, b=0, sigma= sigma)
install.packages(c("caTools", "coin", "devtools", "forecast", "htmltools", "jsonlite", "knitr", "mime", "minqa", "party", "quantmod", "Rcpp", "RcppArmadillo", "rmarkdown", "shiny", "testthat", "xtable"))
install.packages("RWinEdt")
#  Examples 15.1 and 15.3 and Figure 15.1
library(tseries)
library(urca)
yieldDat = read.table("treasury_yields.txt",header=T)
dat = as.matrix(yieldDat[,3:7])
year = seq(1990,2008-1/4,length=4714)
res = residuals(lm(dat[,3]~dat[,1]+dat[,2]+dat[,4]+dat[,4]))
postscript("yieldsCointegration.ps",width=7.25,height=4.5)  #  Example 15.1
par(mfrow=c(2,4))
plot(year,dat[,1],type="l",ylab="",main="3-month")
plot(year,dat[,2],type="l",ylab="",main="6-month")
plot(year,dat[,3],type="l",ylab="",main="1-year")
plot(year,dat[,4],type="l",ylab="",main="2-year")
plot(year,dat[,5],type="l",ylab="",main="3-year")
plot(year,res,type="l",ylab="",main="residuals")
acf(res,main="ACF of residuals",xlab="lag")
graphics.off()
options(digits=6)     #  Example 15.1
po.test(dat[,c(3,1,2,4,5)])
options(digits=3)     #  Example 15.3
summary(ca.jo(dat)
)
summary(ca.jo(dat))
library(urca)
library(fEcofin)
midcapD.ts=read.csv("8_midcapD.ts.csv",header=T,sep=";")
x = midcapD.ts[,2:11]
prices= exp(apply(x,2,cumsum))
options(digits=3)
summary(ca.jo(prices))
library(urca)
library(fEcofin)
midcapD.ts=read.csv("8_midcapD.ts.csv",header=T,sep=";")
x = midcapD.ts[,2:11]
plot(x)
?apply
dim(x)
prices= exp(apply(x,2,cumsum))
plot(prices)
options(digits=3)
summary(ca.jo(prices))
library(tseries)
library(urca)
test1=function(){
yieldDat = read.table("treasury_yields.txt",header=T)
dat = as.matrix(yieldDat[,3:7])
year = seq(1990,2008-1/4,length=4714)
res = residuals(lm(dat[,3]~dat[,1]+dat[,2]+dat[,4]+dat[,4]))
postscript("yieldsCointegration.ps",width=7.25,height=4.5)  #  Example 15.1
par(mfrow=c(2,4))
plot(year,dat[,1],type="l",ylab="",main="3-month")
plot(year,dat[,2],type="l",ylab="",main="6-month")
plot(year,dat[,3],type="l",ylab="",main="1-year")
plot(year,dat[,4],type="l",ylab="",main="2-year")
plot(year,dat[,5],type="l",ylab="",main="3-year")
plot(year,res,type="l",ylab="",main="residuals")
acf(res,main="ACF of residuals",xlab="lag")
graphics.off()
options(digits=6)     #  Example 15.1
po.test(dat[,c(3,1,2,4,5)])
options(digits=3)     #  Example 15.3
summary(ca.jo(dat))
}
debug(test1)
test1()
undebug(test1)
test1=function(){
yieldDat = read.table("treasury_yields.txt",header=T)
dat = as.matrix(yieldDat[,3:7])
year = seq(1990,2008-1/4,length=4714)
res = residuals(lm(dat[,3]~dat[,1]+dat[,2]+dat[,4]+dat[,4]))
#postscript("yieldsCointegration.ps",width=7.25,height=4.5)  #  Example 15.1
par(mfrow=c(2,4))
plot(year,dat[,1],type="l",ylab="",main="3-month")
plot(year,dat[,2],type="l",ylab="",main="6-month")
plot(year,dat[,3],type="l",ylab="",main="1-year")
plot(year,dat[,4],type="l",ylab="",main="2-year")
plot(year,dat[,5],type="l",ylab="",main="3-year")
plot(year,res,type="l",ylab="",main="residuals")
acf(res,main="ACF of residuals",xlab="lag")
#graphics.off()
options(digits=6)     #  Example 15.1
po.test(dat[,c(3,1,2,4,5)])
options(digits=3)     #  Example 15.3
summary(ca.jo(dat))
}
debug(test1)
test1()
undebug(test1)
x=dat[,c(3,1,2,4,5)]
head(x)
rankMatrix(cbind(1, 0, 1:3))
library(Matrix)
rankMatrix(cbind(1, 0, 1:3))
cbind(1, 0, 1:3)
?urca
??urca
a=function(){
n = 5000
set.seed(12345)
a1 = .5
a2 = .55
lambda  = 1
y1 = rep(0,n)
y2 = y1
e1 = rnorm(n)
e2 = rnorm(n)
for (i in 2:n)
{
y1[i] = y1[i-1] + a1 * (y1[i-1] - lambda*y2[i-1]) + e1[i]
y2[i] = y2[i-1] + a2 * (y1[i-1] - lambda*y2[i-1]) + e2[i]
}
a1 - lambda*a2
ind = 10*(1:500)
#postscript("cointSimEx1.ps",width=6,height=2.5)  #  Figure 15.2
par(mfrow=c(1,3))
plot(y1[ind],type="l",main=expression(Y[1]),ylab="")
plot(y2[ind],type="l",main=expression(Y[2]),ylab="")
plot(y1[ind]-lambda*y2[ind],type="l",
main=expression(paste(Y[1],-lambda,Y[2])),ylab="")
#graphics.off()
}
debug(a)
test1()
undebug(a)
a=function(){
n = 5000
set.seed(12345)
a1 = .5
a2 = .55
lambda  = 1
y1 = rep(0,n)
y2 = y1
e1 = rnorm(n)
e2 = rnorm(n)
for (i in 2:n)
{
y1[i] = y1[i-1] + a1 * (y1[i-1] - lambda*y2[i-1]) + e1[i]
y2[i] = y2[i-1] + a2 * (y1[i-1] - lambda*y2[i-1]) + e2[i]
}
a1 - lambda*a2
ind = 10*(1:500)
#postscript("cointSimEx1.ps",width=6,height=2.5)  #  Figure 15.2
par(mfrow=c(1,3))
plot(y1[ind],type="l",main=expression(Y[1]),ylab="")
plot(y2[ind],type="l",main=expression(Y[2]),ylab="")
plot(y1[ind]-lambda*y2[ind],type="l",
main=expression(paste(Y[1],-lambda,Y[2])),ylab="")
#graphics.off()
}
debug(a)
test1()
undebug(a)
debug(a)
test1()
undebug(a)
aaa()
aaa=function(){
n = 5000
set.seed(12345)
a1 = .5
a2 = .55
lambda  = 1
y1 = rep(0,n)
y2 = y1
e1 = rnorm(n)
e2 = rnorm(n)
for (i in 2:n)
{
y1[i] = y1[i-1] + a1 * (y1[i-1] - lambda*y2[i-1]) + e1[i]
y2[i] = y2[i-1] + a2 * (y1[i-1] - lambda*y2[i-1]) + e2[i]
}
a1 - lambda*a2
ind = 10*(1:500)
#postscript("cointSimEx1.ps",width=6,height=2.5)  #  Figure 15.2
par(mfrow=c(1,3))
plot(y1[ind],type="l",main=expression(Y[1]),ylab="")
plot(y2[ind],type="l",main=expression(Y[2]),ylab="")
plot(y1[ind]-lambda*y2[ind],type="l",
main=expression(paste(Y[1],-lambda,Y[2])),ylab="")
#graphics.off()
}
debug(aaa)
aaa()
undebug(aaa)
c(1920,1080)*0.8
c(1920,1080)*0.75
c(1920,1080)*0.6
c(1920,1080)*0.78
c(1920,1080)*0.8
library("fUnitRoots")
library("urca")
library("MTS")
da=read.table("m-bnd.txt")
bnd=da[,4:5]
colnames(bnd) <- c("Aaa","Baa")
adfTest(bnd[,1],lags=3,type="c")
adfTest(bnd[,2],lags=2,type="c")
m1=VARorder(bnd)
m2=ca.jo(bnd,K=2,ecdet=c("none"))
summary(m2)
plot(bnd)
cat(bnd)
class(bnd)
MTSplot(bnd)
da=read.table("m-bnd.txt")
bnd=da[,4:5]
MTSplot(bnd)
getcwd()
getwd()
da=read.table("m-bnd.txt")
da=read.table("m-bnd.txt")
da=read.table("m-bnd.txt")
bnd=da[,4:5]
colnames(bnd) <- c("Aaa","Baa")
adfTest(bnd[,1],lags=3,type="c") #Augmented Dickey-Fuller Test
adfTest(bnd[,2],lags=2,type="c")
m1=VARorder(bnd)
m2=ca.jo(bnd,K=2,ecdet=c("none"))
summary(m2)
MTSplot(bnd)
a1=adfTest(bnd[,1],lags=3,type="c") #Augmented Dickey-Fuller Test
a1
MTSplot(bnd)
?ca.jo
?ca.jo
