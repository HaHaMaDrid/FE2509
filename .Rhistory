var5day=-S*qnorm(0.1, mean = 5*m,sd = sqrt(5)*sigma)
var5day
library(fGarch)
library(Ecdat)
data(Irates)
r = as.numeric(log(Irates[,2]))
n = length(r)
lagr = r[1:(n-1)]
diffr = r[2:n] - lagr
garchFit(~arma(1,0)+garch(1,1),data=diffr, cond.dist = "std")
g=garchFit(~arma(1,0)+garch(1,1),data=diffr, cond.dist = "std")
g
g$R
residuals(g)
acf(residuals(g))
acf(residuals(g)^2)
acf(diffr)
1+0.51^2
1+0.3*0.51^2
?VARMAsim
??VARMAsim
library(MTS)
matrix(c(0.8,0.4,-0.3,0.6))
matrix(c(0.8,0.4,-0.3,0.6),nrow = 2)
matrix(c(0.8,-0.3,0.4,0.6),nrow = 2)
C=matrix(c(0.8,-0.3,0.4,0.6),nrow = 2)
S=matrix(c(2,0.5,0.5,1.0),nrow = 2)
S
C
m1 = VARMAsim(300,arlags = c(1),phi = C,sigma = S)
yt = m1$series
plot(yt)
ccm(yt,5)
diag(2)
?rmvnorm
library(MTS)
C=matrix(c(0.8,-0.3,0.4,0.6),nrow = 2)
S=matrix(c(2,0.5,0.5,1.0),nrow = 2)
m1 = VARMAsim(300,arlags = c(1),phi = C,sigma = S)
yt = m1$series
plot(yt)
m1
head(m1)
class(m1)
C(1)
C
?VARMAsim
ccm(yt,lags = 5)
?VARMAsim
library(MTS)
?VARMAsim
kable(head(iris), format = "latex")
install.packages("kable")
library(knitr)
install.packages("kable")
kable(head(iris), format = "latex")
kable(head(iris), format = "html")
kable(matrix(1000, ncol = 5), format = "latex", digits = 2, longtable = TRUE)
kable(matrix(1000, ncol = 5), format = "markdown", digits = 2, longtable = TRUE)
kable(matrix(1000, ncol = 5), format = "markdown", digits = 2)
MTSplot(yt)
mq(yt, lag=1-)
mq(yt, lag=10)
m2 = VARMAsim(200,malags = c(1),theta = C,sigma = S);
zt = m2$series
ccm(zt, lags = 2)
mq(zt, lag=10)
rate=read.table("q-fdebt.txt",header=T)
head(rate)
MSTplot(rate)
library(MTS)
MSTplot(rate)
MSTPlot(rate)
MTSplot(rate)
VAR(zt, lags = 5)
library(MTS)
da=read.table("q-fdebt.txt",header=T)
debt=log(da[,3:5])
tdx=da[,1]+da[,2]/12
#MTSplot(debt,tdx);
zt=diffM(debt);
MTSplot(zt,tdx[-1])
VAR(zt, lags = 5)
VAR(zt,p=1)
VAR(zt,p=2)
VAR(zt,p=1)
install.packages("vars")
VARorder(zt)
?VARorder
?VARorderI
VARorderI(zt)
VARorder(zt)
VARorderI(zt)
v=VAR(zt,p=6)
resi=v$residuals
mq(resi,adj=18)
VARorder(zt)
VARorderI(zt)
1+0.3*0.69^2
?factanal
?VARorder
library("MTS")
?VARorder
?refVAR
maturity = c((0:5),5.5,6.5,7.5,8.5,9.5)
maturity
yieldDat = read.table("9_treasury_yields.txt",header=T)
maturity = c((0:5),5.5,6.5,7.5,8.5,9.5)
pairs(yieldDat)
par(mfrow=c(4,3))
for (i in 0:11){
plot(maturity,yieldDat[100*i+1,],type="b")
}
?pairs
#####Author: Meng WeiRan(A0109899E), Dai Rui(A0132308R)
[NUS MFE]: http://www.rmi.nus.edu.sg/_images/rmilogo_27June2013.jpg
![NUS MFE][http://www.rmi.nus.edu.sg/_images/rmilogo_27June2013.jpg]
![logo](http://www.rmi.nus.edu.sg/_images/rmilogo_27June2013.jpg "NUS MFE")
install.packages("fOptions")
library(fOptions)
?fOptions
??fOptions
library(fOptions)
GBSOption(TypeFlag = "c", S = s0, X = K, Time = T, r = r, b = 0, sigma = sigma)
r= 0.10
sigma=0.30
s0=100
K=100
H=97
T=0.2
GBSOption(TypeFlag = "c", S = s0, X = K, Time = T, r = r, b = 0, sigma = sigma)
install.packages("fExoticOptions")
library(fExoticOptions)
??fExoticOptions
?fExoticOptions
?GeometricAverageRateOption
PTSingleAssetBarrierOption(TypeFlag="cdoA", S=s0, X=K, H=H, K=0, Time=T, r=r, b=0, sigma= sigma,title = NULL, description = NULL)
r= 0.10
sigma=0.30
s0=100
X=100
H=97
T=0.2
PTSingleAssetBarrierOption(TypeFlag="cdoA", S=s0, X=X, H=H, K=0, Time=T, r=r, b=0, sigma= sigma,title = NULL, description = NULL)
PTSingleAssetBarrierOption(TypeFlag="cdoA", S=s0, X=X, H=H, Time=T, r=r, b=0, sigma= sigma)
PTSingleAssetBarrierOption(TypeFlag="cdoB", S=s0, X=X, H=H, time1=0,Time=T, r=r, b=0, sigma= sigma)
install.packages(c("caTools", "coin", "devtools", "forecast", "htmltools", "jsonlite", "knitr", "mime", "minqa", "party", "quantmod", "Rcpp", "RcppArmadillo", "rmarkdown", "shiny", "testthat", "xtable"))
install.packages("RWinEdt")
#  Examples 15.1 and 15.3 and Figure 15.1
library(tseries)
library(urca)
yieldDat = read.table("treasury_yields.txt",header=T)
dat = as.matrix(yieldDat[,3:7])
year = seq(1990,2008-1/4,length=4714)
res = residuals(lm(dat[,3]~dat[,1]+dat[,2]+dat[,4]+dat[,4]))
postscript("yieldsCointegration.ps",width=7.25,height=4.5)  #  Example 15.1
par(mfrow=c(2,4))
plot(year,dat[,1],type="l",ylab="",main="3-month")
plot(year,dat[,2],type="l",ylab="",main="6-month")
plot(year,dat[,3],type="l",ylab="",main="1-year")
plot(year,dat[,4],type="l",ylab="",main="2-year")
plot(year,dat[,5],type="l",ylab="",main="3-year")
plot(year,res,type="l",ylab="",main="residuals")
acf(res,main="ACF of residuals",xlab="lag")
graphics.off()
options(digits=6)     #  Example 15.1
po.test(dat[,c(3,1,2,4,5)])
options(digits=3)     #  Example 15.3
summary(ca.jo(dat)
)
summary(ca.jo(dat))
library(urca)
library(fEcofin)
midcapD.ts=read.csv("8_midcapD.ts.csv",header=T,sep=";")
x = midcapD.ts[,2:11]
prices= exp(apply(x,2,cumsum))
options(digits=3)
summary(ca.jo(prices))
library(urca)
library(fEcofin)
midcapD.ts=read.csv("8_midcapD.ts.csv",header=T,sep=";")
x = midcapD.ts[,2:11]
plot(x)
?apply
dim(x)
prices= exp(apply(x,2,cumsum))
plot(prices)
options(digits=3)
summary(ca.jo(prices))
library(tseries)
library(urca)
test1=function(){
yieldDat = read.table("treasury_yields.txt",header=T)
dat = as.matrix(yieldDat[,3:7])
year = seq(1990,2008-1/4,length=4714)
res = residuals(lm(dat[,3]~dat[,1]+dat[,2]+dat[,4]+dat[,4]))
postscript("yieldsCointegration.ps",width=7.25,height=4.5)  #  Example 15.1
par(mfrow=c(2,4))
plot(year,dat[,1],type="l",ylab="",main="3-month")
plot(year,dat[,2],type="l",ylab="",main="6-month")
plot(year,dat[,3],type="l",ylab="",main="1-year")
plot(year,dat[,4],type="l",ylab="",main="2-year")
plot(year,dat[,5],type="l",ylab="",main="3-year")
plot(year,res,type="l",ylab="",main="residuals")
acf(res,main="ACF of residuals",xlab="lag")
graphics.off()
options(digits=6)     #  Example 15.1
po.test(dat[,c(3,1,2,4,5)])
options(digits=3)     #  Example 15.3
summary(ca.jo(dat))
}
debug(test1)
test1()
undebug(test1)
test1=function(){
yieldDat = read.table("treasury_yields.txt",header=T)
dat = as.matrix(yieldDat[,3:7])
year = seq(1990,2008-1/4,length=4714)
res = residuals(lm(dat[,3]~dat[,1]+dat[,2]+dat[,4]+dat[,4]))
#postscript("yieldsCointegration.ps",width=7.25,height=4.5)  #  Example 15.1
par(mfrow=c(2,4))
plot(year,dat[,1],type="l",ylab="",main="3-month")
plot(year,dat[,2],type="l",ylab="",main="6-month")
plot(year,dat[,3],type="l",ylab="",main="1-year")
plot(year,dat[,4],type="l",ylab="",main="2-year")
plot(year,dat[,5],type="l",ylab="",main="3-year")
plot(year,res,type="l",ylab="",main="residuals")
acf(res,main="ACF of residuals",xlab="lag")
#graphics.off()
options(digits=6)     #  Example 15.1
po.test(dat[,c(3,1,2,4,5)])
options(digits=3)     #  Example 15.3
summary(ca.jo(dat))
}
debug(test1)
test1()
undebug(test1)
x=dat[,c(3,1,2,4,5)]
head(x)
rankMatrix(cbind(1, 0, 1:3))
library(Matrix)
rankMatrix(cbind(1, 0, 1:3))
cbind(1, 0, 1:3)
?urca
??urca
a=function(){
n = 5000
set.seed(12345)
a1 = .5
a2 = .55
lambda  = 1
y1 = rep(0,n)
y2 = y1
e1 = rnorm(n)
e2 = rnorm(n)
for (i in 2:n)
{
y1[i] = y1[i-1] + a1 * (y1[i-1] - lambda*y2[i-1]) + e1[i]
y2[i] = y2[i-1] + a2 * (y1[i-1] - lambda*y2[i-1]) + e2[i]
}
a1 - lambda*a2
ind = 10*(1:500)
#postscript("cointSimEx1.ps",width=6,height=2.5)  #  Figure 15.2
par(mfrow=c(1,3))
plot(y1[ind],type="l",main=expression(Y[1]),ylab="")
plot(y2[ind],type="l",main=expression(Y[2]),ylab="")
plot(y1[ind]-lambda*y2[ind],type="l",
main=expression(paste(Y[1],-lambda,Y[2])),ylab="")
#graphics.off()
}
debug(a)
test1()
undebug(a)
a=function(){
n = 5000
set.seed(12345)
a1 = .5
a2 = .55
lambda  = 1
y1 = rep(0,n)
y2 = y1
e1 = rnorm(n)
e2 = rnorm(n)
for (i in 2:n)
{
y1[i] = y1[i-1] + a1 * (y1[i-1] - lambda*y2[i-1]) + e1[i]
y2[i] = y2[i-1] + a2 * (y1[i-1] - lambda*y2[i-1]) + e2[i]
}
a1 - lambda*a2
ind = 10*(1:500)
#postscript("cointSimEx1.ps",width=6,height=2.5)  #  Figure 15.2
par(mfrow=c(1,3))
plot(y1[ind],type="l",main=expression(Y[1]),ylab="")
plot(y2[ind],type="l",main=expression(Y[2]),ylab="")
plot(y1[ind]-lambda*y2[ind],type="l",
main=expression(paste(Y[1],-lambda,Y[2])),ylab="")
#graphics.off()
}
debug(a)
test1()
undebug(a)
debug(a)
test1()
undebug(a)
aaa()
aaa=function(){
n = 5000
set.seed(12345)
a1 = .5
a2 = .55
lambda  = 1
y1 = rep(0,n)
y2 = y1
e1 = rnorm(n)
e2 = rnorm(n)
for (i in 2:n)
{
y1[i] = y1[i-1] + a1 * (y1[i-1] - lambda*y2[i-1]) + e1[i]
y2[i] = y2[i-1] + a2 * (y1[i-1] - lambda*y2[i-1]) + e2[i]
}
a1 - lambda*a2
ind = 10*(1:500)
#postscript("cointSimEx1.ps",width=6,height=2.5)  #  Figure 15.2
par(mfrow=c(1,3))
plot(y1[ind],type="l",main=expression(Y[1]),ylab="")
plot(y2[ind],type="l",main=expression(Y[2]),ylab="")
plot(y1[ind]-lambda*y2[ind],type="l",
main=expression(paste(Y[1],-lambda,Y[2])),ylab="")
#graphics.off()
}
debug(aaa)
aaa()
undebug(aaa)
c(1920,1080)*0.8
c(1920,1080)*0.75
c(1920,1080)*0.6
c(1920,1080)*0.78
c(1920,1080)*0.8
library("fUnitRoots")
library("urca")
library("MTS")
da=read.table("m-bnd.txt")
bnd=da[,4:5]
colnames(bnd) <- c("Aaa","Baa")
adfTest(bnd[,1],lags=3,type="c")
adfTest(bnd[,2],lags=2,type="c")
m1=VARorder(bnd)
m2=ca.jo(bnd,K=2,ecdet=c("none"))
summary(m2)
plot(bnd)
cat(bnd)
class(bnd)
MTSplot(bnd)
da=read.table("m-bnd.txt")
bnd=da[,4:5]
MTSplot(bnd)
getcwd()
getwd()
da=read.table("m-bnd.txt")
da=read.table("m-bnd.txt")
da=read.table("m-bnd.txt")
bnd=da[,4:5]
colnames(bnd) <- c("Aaa","Baa")
adfTest(bnd[,1],lags=3,type="c") #Augmented Dickey-Fuller Test
adfTest(bnd[,2],lags=2,type="c")
m1=VARorder(bnd)
m2=ca.jo(bnd,K=2,ecdet=c("none"))
summary(m2)
MTSplot(bnd)
a1=adfTest(bnd[,1],lags=3,type="c") #Augmented Dickey-Fuller Test
a1
MTSplot(bnd)
?ca.jo
?ca.jo
install.packages("xlsx")
?density
#plot(density(x, bw="SJ", kernel="epanechnikov"))
x <- c(5, 10, 15)
plot(density(x, bw="SJ", kernel="epanechnikov"))
plot(x)
plot(density(x, bw="SJ", kernel="epanechnikov"))
x = read.csv("http://cos.name/wp-content/uploads/2008/11/counts.txt")
x
par(las = 1, mar = c(4, 4, 0.1, 0.1))
plot(x, pch = 20, col = rgb(0, 0, 0, 0.5))
# 取不同的f参数值
for (i in seq(0.01, 1, length = 100)) {
lines(lowess(x$altitude, x$counts, f = i), col = gray(i),
lwd = 1.5)
Sys.sleep(0.15)
}
?lowess
require(devtools)
install_github('rCharts', 'ramnathv')
require(rCharts)
require(Shiny)
install.packages("shiny")
install_github("slidify", "ramnathv")
install_github("slidifyLibraries", "ramnathv")
install_github('slidify', 'ramnathv')
install.packages("yhat")
install.packages("yhatr")
?glm
transpose
?transpose
install.packages(“RMySQL”, type = “source”)
install.packages("RMySQL", type = "source")
install.packages("RMySQL", type = "source")
library("RMySQL")
con = dbConnect(MySQL(), user="root", password="wfh168178",
dbname="equities", host="192.168.254.1")
getDF=function(con){
stocks=c('ATHM','BITA','FXI','SPY','HMIN','HTHT')
df =NA #<- data.frame()
for (s in stocks){
cmd = sprintf("SELECT dt,h-l AS %s FROM bar1d WHERE s='%s'
AND dt>'2014-01-24' AND dt<='2014-10-24' ORDER BY dt",
s,s)
print cmd
rs  = dbSendQuery(con, cmd)
tmp = fetch(rs, n = -1)
if(is.data.frame(df)){
df = merge(df,tmp)
}else{
df = tmp
}
}
rownames(df) = df$dt
df=df[,!(names(df) %in% c('dt'))]
#cm=colMeans(df)
#for (s in stocks){
#  df[s] = df[s]-cm[s]
#}
return(df)
}
con
getDF=function(con){
stocks=c('ATHM','BITA','FXI','SPY','HMIN','HTHT')
df =NA #<- data.frame()
for (s in stocks){
cmd = sprintf("SELECT dt,h-l AS %s FROM bar1d WHERE s='%s' AND dt>'2014-01-24' AND dt<='2014-10-24' ORDER BY dt",s,s)
print cmd
rs  = dbSendQuery(con, cmd)
tmp = fetch(rs, n = -1)
if(is.data.frame(df)){
df = merge(df,tmp)
}else{
df = tmp
}
}
rownames(df) = df$dt
df=df[,!(names(df) %in% c('dt'))]
#cm=colMeans(df)
#for (s in stocks){
#  df[s] = df[s]-cm[s]
#}
return(df)
}
getDF=function(con){
stocks=c('ATHM','BITA','FXI','SPY','HMIN','HTHT')
df =NA #<- data.frame()
for (s in stocks){
cmd = sprintf("SELECT dt,h-l AS %s FROM bar1d WHERE s='%s' AND dt>'2014-01-24' AND dt<='2014-10-24' ORDER BY dt",s,s)
print(cmd)
rs  = dbSendQuery(con, cmd)
tmp = fetch(rs, n = -1)
if(is.data.frame(df)){
df = merge(df,tmp)
}else{
df = tmp
}
}
rownames(df) = df$dt
df=df[,!(names(df) %in% c('dt'))]
#cm=colMeans(df)
#for (s in stocks){
#  df[s] = df[s]-cm[s]
#}
return(df)
}
df=getDF(con)
library(MTS)
MTSplot(df)
?fliplr
??fliplr
fit1=lm(df$ATHM ~ df$BITA+df$FXI+df$SPY+df$HMIN+df$HTHT)
summary(fit1)
plot(lm)
a <- matrix(1:30, 5, 6)
ta <- t(a)
ta
a
cor(df)
ccm(df)
library(fEcofin)
library(urca)
mk.maturity=read.csv("8_mk.maturity.csv",header=T)
mk.maturity[2:11,]
mk.zero2=read.csv("8_mk.zero2.csv",header=T,sep=";")
res = ca.jo(mk.zero2[,2:11])
summary(res)
plotres(res)
plotres(res)
MTSplot(mk.zero2[,2:11])
library(MTS)
MTSplot(mk.zero2[,2:11])
MTSplot(mk.zero2[,2:11])
cor(mk.zero2[,2:11])
plot(mk.zero2[,2:11])
summary(res)
13500/12.
135000/12.
