MFE5209 Presentation (Rlab 9)
========================================================
#width: 1920
#height: 1080
width: 1536
height: 864
author:Wu Fuheng,  Rui Dai, Ou Jin, Meng Weiran, Hao Sijia
date: Oct 25, 2014
font-family: 'consolas'
transition: rotate
autosize: true
css: rlab9.css

>
> - (Multi)Cointegration
> - VECM
>

<img src="http://www.rmi.nus.edu.sg/_images/rmilogo_27June2013.jpg" class="imgCenter" border=0/>

Problem Set 1 - Cointegration Analysis of Midcap Prices
========================================================
source: presentation1.R

> The data set midcapD.ts in the fEcofin package has daily returns on 20 midcap stocks in columns 2-21. Columns 1 and 22 contain the date and market returns, respectively. In this section, we will use returns on the first 10 stocks. To find the stock prices from the returns, we use the relationship $P_t = P_0 * exp(r_1 + ...+ r_t)$ where $P_t$ and $r_t$ are the price and log return at time t. The returns will be used as approximations to the log returns. The prices at time 0 are unknown, so we will use $P_0 = 1$ for each stock. This means that the price series we use will be off by multiplicative factors. This does not affect the number of cointegration vectors. If we find that there are cointegration relationships, then it would be necessary to get the price data to investigate trading strategies. Johansen's cointegration analysis will be applied to the prices with the ca.jo function in the urca package.

<img src="http://upload.wikimedia.org/wikipedia/en/thumb/0/0d/Simpsons_FamilyPicture.png/375px-Simpsons_FamilyPicture.png" class="imgRight" border=0 width=20%/>

Question 1
========================================================
css: rlab9.css

> Q1: How many cointegration vectors were found in prices?

```{r , eval=FALSE, results='hide', echo=TRUE}
rm(list=ls())
library(fEcofin)
library(urca)
# import time series data
if (!exists("midcapD.ts")){
  midcapD.ts=read.csv("8_midcapD.ts.csv",header=T,sep=";")
}
# Columns 1 and 22 contain the date and market returns, respectively.
#head(midcapD.ts)
# the data we are using
data = midcapD.ts[,2:11]
# P_t = P_0 * exp(r_1 + ...+ r_t)
prices= exp(apply(data,2,cumsum))
#controls the number of digits to print when printing numeric values
options(digits=3)
#Conducts the Johansen procedure on prices
summary(ca.jo(prices))
```

Question 1
========================================================
css: rlab9.css

```{r , eval=TRUE, results='hide', echo=FALSE}
library(fEcofin)
library(urca)
midcapD.ts=read.csv("8_midcapD.ts.csv",header=T,sep=";")
x = midcapD.ts[,2:11]
prices= exp(apply(x,2,cumsum))
options(digits=3)
summary(ca.jo(prices))
```

> A1: According to Johansen test, if the test statistic is greater than the critial value, we can reject the NULL hypothesis. In this case, regardless of whether we use a 1%, 5%, or 10% level test, we suggest that no cointegration vector should exist.

```{r , eval=TRUE}
summary(ca.jo(prices))
```


Problem Set 2 - Cointegration Analysis of Yields
========================================================
source:presentation2.R
> This example is similar to Example 15.3(*SDAFE*) but uses different yield data. The data are in the mk.zero2 data set in the fEcofin package. There are 55 maturities and they are in the vector mk.maturity . We will use only the first 10 yields. Run

```{r message=FALSE, warning=FALSE, results='hide'}
library(MTS)
library(fUnitRoots)
library(fEcofin)
library(urca)
#mk.maturity=read.csv("8_mk.maturity.csv",header=T)
mk.maturity[2:11,] # maturity
#mk.zero2=read.csv("8_mk.zero2.csv",header=T,sep=";")#yield
zos = mk.zero2[,2:11]
zos.vecm = ca.jo(zos)
summary(zos.vecm)
#plotres(res)
```

Question 2
========================================================
source:presentation2.R
> Q2: What maturities are being used? Are they short-, medium-, or longterm, or a mixture of short- and long-term maturities?

```{r message=FALSE, warning=FALSE}
ma=mk.maturity[2:11,] # maturity
sort(ma) # sort it
```

> A2: We choose maturities from mk.maturity(from row 2 to row 11), and they are 0.083, 0.167, 0.25, 0.333, 0.417, 0.5, 0.583, 0.667, 0.75, 0.833. They are **short-term** maturities.

Question 3
========================================================
source:presentation2.R
> - Q3: How many cointegration vectors were found? Use 1% level tests. 
> - A3: According to Johansen test, if the test statistic is greater than the critial value, we can reject the NULL hypothesis. So from the result below, we can rejects that r is equal to 0, less than or equal to 1, 2 and 3 but cannot reject r<=4, so we conclude that r = 4. In other words, 4 cointegration vectors were found using 1% level test.

```{r message=FALSE, warning=FALSE}
zos=mk.zero2[,2:11]
zos.vecm = ca.jo(zos)
summary(zos.vecm)
#plotres(res)
```

Question 4
========================================================
source:presentation2.R 24
> - Q4: Which trading strategy do you recommend?
> - A4: Pairs/Basket Trading.

> The VECM model for the VAR(1) process is:
> $$\Delta Y_t = \alpha \beta^{T} Y_{t-1} + \varepsilon $$
> We know all the time series components in our data $Y_t$ is I(1), i.e. $Y_t$ is I(1). Therefore, $\Delta Y_t$ is I(0). The right hand side $\alpha \beta^{T} Y_{t-1}$ should also be I(0). $\alpha$ is just a loading matrix specifying the speed of mean reversion, so it follows $\beta^{T} Y_{t-1}$ is also I(0), i.e. $\beta^{T} Y_{t}=I(0)$.

> In our case, we call $\beta^{T} Y_{t}$ **compounded yield** as it is constructed from different yields. So we can build a strategy to trade the **compounded yield** according to the error correction model.

Question 4 (continued 1)
========================================================
source:presentation2.R 24

> Strategy Implementation
> - 1. Create a portfolio using the cointegration vector as portfolio weights. This portfolio can use any IR products such as bond, swap, futures.([CMEGroup IR products](http://www.cmegroup.com/trading/interest-rates/))
> - 2. Select a range variable as a signal indicator, say one standard deviation. We allow the compounded yield fluctuate inside the range around it moving average. When the compounded yield is outside the range, a BUY/SELL signal is triggered.


Question 4 (continued 2)
========================================================
source:presentation2.R 24

Get compounded yield $cyield = \beta Y_t$ and test stationarity

```{r message=FALSE, warning=FALSE, fig.align='center'}
beta=zos.vecm@V # Beta after normalization
mbeta=beta[,1:4] # 10x4# meaningful cointegration vector
cyield=as.matrix(zos) %*% mbeta # (AB)' = (B'*A') - cyield should be a stationary time series according to VECM
# stationarity check with Augumented Dickey-Fuller test
adfTest(cyield[,1])@test$p.value
adfTest(cyield[,2])@test$p.value
adfTest(cyield[,3])@test$p.value
adfTest(cyield[,4])@test$p.value
```



Question 4 (continued 3)
========================================================
source:presentation2.R 24

```{r message=FALSE, warning=FALSE, fig.align='center'}
# draw cyield and range lines
plot(cyield[,1],type="o",col='black',ylim=c(-0.005,0.005))
lines(cyield[,2],type="o",col='red',ylim=c(-0.005,0.005))
lines(cyield[,3],type="o",col='green',ylim=c(-0.005,0.005))
lines(cyield[,4],type="l",col='blue',ylim=c(-0.005,0.005))
abline(h = c(-0.0005,0.0005, -0.001,0.001, -0.002,0.002)) # range lines
```

Question 4 (continued 4)
========================================================
source:presentation2.R 24
> Optimization and Basket Selection

> - We already know $\beta^{T} Y_{t}=I(0)$ and not of full rank, we can use Gaussian elimination to transform $\beta^{T}$ to something like a triangular matrix. If there are r cointegration relationships in a n-variable system, there exists a cointegrating vector for each subset of (n-r+1) variables. In our case, use 7 yields instead of 10 to reduce trading cost.

> - Which basket we should select depends on trading costs/fee, bid/ask spread.